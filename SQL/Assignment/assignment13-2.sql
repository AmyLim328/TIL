/* 제약조건 과제
 * 학생 정보 테이블 (STUDENT)
 * 1. 학번 (ID, NUMBER(8))
 * 2. 이름 (NAME, VARCHAR(10))
 * 3. 생년월일 (BIRTHDAY, DATE)
 * 4. 핸드폰번호 (PHONENUM, VARCHAR(20))
 * 5. 학년 (GRADE, NUMBER(1))
 * 6. 학기 (SEMESTER, NUMBER(1))
 * 7. 학과 코드 (DEPTNO, VARCHAR(3))
 
 * 학과 정보 테이블 (UNIVDEPT)
 * 1. 학과 코드 (DEPTNO, VARCHAR(3))
 * 2. 학과 이름 (DEPTNAME, VARCHAR(10))
 * 3. 개설 일자 (ESTDATE, DATE)
 * 4. 대표 전화번호 (DEPTTEL, VARCHAR(20))
 **/

-- 제약조건
-- 1. 학생 정보 테이블에서 ID은 기본키, 학과 정보 테이블에서 DEPTNO는 기본키
-- 2. 학생 정보 테이블과 학과 정보 테이블은 학과 코드 열을 기준으로 관계가 형성되어있음
-- (STUDENT에서 DEPTNO은 외래키, UNIVDEPT에서 DEPTNO은 기본키)
-- 만약 학과 정보가 사라지게 된다면 학생 테이블에서 DEPTNO은 NULL로 설정

-- 학생 정보 테이블 제약조건
-- 1. 학번은 무조건 8개로 구성되고 모두 숫자여야 함
-- 2. 핸드폰 번호는 11자리 넘어야 함 
-- 3. 학년은 1, 2, 3, 4 학년으로만 구성 (디폴트 값은 1)
-- 4. 학기는 1, 2 학기로만 구성 (디폴트 값은 1)

-- 학과 정보 테이블 제약조건
-- 1. 학과 코드는 무조건 3개로 구성되고 모두 문자여야 함
-- 2. 대표 전화번호는 11자리를 넘어야 함

-- 입력 조건
-- 1. 생년월일은 시간없이 년/월/일 형태로 입력됨
-- 2. 개설 일자는 시간없이 년/월/일 형태로 입력됨

-- Q1. 위의 제약조건을 만족하는 테이블 STUDENT, UNIVDEPT을 생성하시오.
DROP TABLE UNIVDEPT;

CREATE TABLE UNIVDEPT (
	DEPTNO VARCHAR(3), 
	DEPTNAME VARCHAR(10),
	ESTDATE DATE,
	DEPTTEL VARCHAR(20),
	CONSTRAINT UNIVDEPT_PK PRIMARY KEY(DEPTNO),
	CONSTRAINT UNIVDEPT_DNO_CK CHECK (LENGTH(DEPTNO) = 3 AND UPPER(DEPTNO) BETWEEN 'AAA' AND 'ZZZ' ), 
	CONSTRAINT UNIVDEPT_DTEL_CK CHECK (LENGTH(DEPTTEL) > 11)
);

DROP TABLE STUDENT;

CREATE TABLE STUDENT (
	ID NUMBER(8),
	NAME VARCHAR(10),
	BIRTHDAY DATE,
	PHONENUM VARCHAR(20),
	GRADE NUMBER(1) DEFAULT 1,
	SEMESTER NUMBER(1) DEFAULT 1,
	DEPTNO VARCHAR(3),
	CONSTRAINT STUDENT_PK PRIMARY KEY (ID),
	CONSTRAINT STUDENT_FK FOREIGN KEY (DEPTNO) REFERENCES UNIVDEPT (DEPTNO) ON DELETE SET NULL,
	CONSTRAINT STUDENT_ID_CK CHECK (LENGTH(ID) = 8 AND ID BETWEEN '00000000' AND '99999999'),
	CONSTRAINT STUDENT_PN_CK CHECK (LENGTH(PHONENUM) > 11),
	CONSTRAINT STUDENT_GR_CK CHECK (GRADE BETWEEN 1 AND 4),
	CONSTRAINT STUDENT_SM_CK CHECK (SEMESTER BETWEEN 1 AND 2)
);

-- Q2. 외래키 제약조건을 위반하는 테스트 코드를 작성하시오.
INSERT INTO UNIVDEPT
VALUES ('COM', 'CS', SYSDATE, '010-1234-5678');

INSERT INTO UNIVDEPT
VALUES ('ACC', 'ACCOUNTING', SYSDATE, '010-1234-5679');

INSERT INTO UNIVDEPT
VALUES ('MUS', 'MUSIC', SYSDATE, '010-1234-5670');

INSERT INTO STUDENT
VALUES (20200001, 'PARIS', TO_DATE('1996/12/29', 'YYYY/MM/DD'), '010-1234-7777', 3, 2, 'ART');

INSERT INTO STUDENT (ID, DEPTNO)
VALUES (20200002, 'SCI');

-- Q3. 학년과 학기의 디폴트 값을 확인할 수 있는 테스트 코드를 작성하시오.
INSERT INTO STUDENT(ID, NAME, BIRTHDAY, PHONENUM, DEPTNO) 
VALUES (20210002, 'HILTON', TO_DATE('1997/12/29', 'YYYY/MM/DD'), '010-1234-8888', 'MUS');

SELECT * FROM STUDENT;

-- Q4. 학번이 제약조건을 위반하는 테스트 코드를 작성하시오.
INSERT INTO STUDENT (ID)
VALUES (NULL);

INSERT INTO STUDENT (ID)
VALUES (20210002);

INSERT INTO STUDENT (ID)
VALUES (202100000);

INSERT INTO STUDENT (ID)
VALUES ('ABCDEFGH');

-- Q5. 학과 코드가 제약조건을 위반하는 테스트 코드를 작성하시오.
INSERT INTO UNIVDEPT (DEPTNO)
VALUES ('POLITIC');

INSERT INTO UNIVDEPT (DEPTNO)
VALUES ('123');

-- Q6. STUDENT, UNIVDEPT 테이블의 제약조건을 확인하는 코드 (USER_CONSTRAINTS)를 작성하시오.
SELECT * 
FROM USER_CONSTRAINTS 
WHERE TABLE_NAME = 'STUDENT';

SELECT * 
FROM USER_CONSTRAINTS 
WHERE TABLE_NAME = 'UNIVDEPT';